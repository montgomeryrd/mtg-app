{"version":3,"sources":["components/GameSetup.js","components/PlayerCard.js","components/InGame.js","App.js","index.js"],"names":["GameSetup","newPlayers","setNewPlayers","setGame","setData","useState","value","setValue","currPlayers","map","player","onClick","removePlayer","id","name","playerID","playerList","filter","className","onSubmit","e","preventDefault","num","Math","random","type","onChange","target","required","placeholder","length","PlayerCard","count","setCount","prev","InGame","cards","App","JSON","parse","window","localStorage","getItem","data","game","useEffect","setItem","stringify","navigator","userAgent","toLowerCase","indexOf","document","write","innerHeight","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.81208d9b.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst GameSetup = ({ newPlayers, setNewPlayers, setGame, setData }) => {\r\n    \r\n    const [value, setValue] = useState('');\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const num = Math.random() * 1;\r\n        setNewPlayers([...newPlayers, {name:value, id:num}]);\r\n        setValue('');\r\n    };\r\n    \r\n    // --------------------------------------------------------------------------\r\n\r\n    const currPlayers = newPlayers.map(player => {\r\n        return (\r\n            <li key={player.id} onClick={() => removePlayer(player.id)}>{player.name}</li>\r\n        )\r\n    });\r\n\r\n    const removePlayer = playerID => {\r\n        const playerList = newPlayers.filter(player => player.id !== playerID);\r\n        setNewPlayers(playerList);\r\n    };\r\n\r\n    // --------------------------------------------------------------------------\r\n\r\n    const startGame = () => {\r\n        setData({newPlayers: newPlayers})\r\n        setGame(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"setup-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={e => setValue(e.target.value)}\r\n                    required={true}\r\n                    placeholder=\"add player\"\r\n                />\r\n            </form>\r\n\r\n            <section className=\"new-player-list\">\r\n                <h2 className=\"title\">PLAYER LIST</h2>\r\n                <ul className=\"current\">\r\n                    {currPlayers}\r\n                    {newPlayers.length >= 2 ? <button className=\"start-btn\" onClick={startGame}>start game</button> : ''}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameSetup;","import { useState } from 'react';\r\n\r\nconst PlayerCard = ({ player }) => {\r\n    const [count, setCount] = useState(20);\r\n\r\n    return (\r\n        <div key={player.id} className={count < 1 ? \"card-container dead\" : \"card-container\"}>\r\n            <h3>{player.name}</h3>\r\n            <section className=\"health\">\r\n                <div className=\"minus\" onClick={() => setCount(prev => prev - 1)}>-</div>\r\n                <div className=\"health\">{count}</div>\r\n                <div className=\"plus\" onClick={() => setCount(prev => prev + 1)}>+</div>\r\n            </section>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlayerCard;","import PlayerCard from './PlayerCard';\r\n\r\nconst InGame = ({ newPlayers, setNewPlayers, setData, setGame }) => {\r\n\r\n    const cards = newPlayers.map(player => {\r\n        return (\r\n            <div key={player.id} >\r\n                <PlayerCard player={player} />\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"players-in-game\">\r\n            {cards}\r\n            <button className=\"reset\" onClick={() => setGame(false)}>new game</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InGame;","import { useState, useEffect } from 'react';\nimport GameSetup from './components/GameSetup';\nimport InGame from './components/InGame';\nimport './styles.css';\n\nfunction App() {\n\tconst initialState = () => JSON.parse(window.localStorage.getItem('mtg-player-data')) || [];\n\tconst [data, setData] = useState(initialState);\n\tconst [newPlayers, setNewPlayers] = useState([]);\n\tconst [game, setGame] = useState(false);\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem('mtg-player-data', JSON.stringify(data));\n\t\tvar isAndroid = navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\n\t\tif (isAndroid) {\n\t\t\tdocument.write('<meta name=\"viewport\" content=\"width=device-width,height='+window.innerHeight+', initial-scale=1.0\">');\n\t\t}\n\t}, [data]);\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ game === false ?\n\t\t\t\t<GameSetup \n\t\t\t\t\tnewPlayers={newPlayers}\n\t\t\t\t\tsetNewPlayers={setNewPlayers}\n\t\t\t\t\tsetGame={setGame}\n\t\t\t\t\tsetData={setData}\n\t\t\t\t/>\n\t\t\t:\n\t\t\t\t<InGame \n\t\t\t\t\tnewPlayers={newPlayers}\n\t\t\t\t\tsetNewPlayers={setNewPlayers}\n\t\t\t\t\tsetData={setData}\n\t\t\t\t\tsetGame={setGame}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}